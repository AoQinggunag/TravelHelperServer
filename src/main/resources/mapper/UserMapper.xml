<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaomo.travelhelper.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.xiaomo.travelhelper.pojo.User">
    <constructor>
      <arg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="username" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="account" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="email" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="img" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="area" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <insert id="insert" parameterType="com.xiaomo.travelhelper.pojo.User">
    insert into th_user (id, username, account, 
      password, email, img,
      area, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{img,jdbcType=VARCHAR},
      #{area,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xiaomo.travelhelper.pojo.User">
    insert into th_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="img != null">
        img,
      </if>
      <if test="area != null">
        area,
      </if>
      <if test="true">
        create_time,
      </if>
      <if test="true">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="img != null">
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="true">
        now(),
      </if>
      <if test="true">
        now(),
      </if>
    </trim>
  </insert>

  <update id="updateByIdSelective" parameterType="com.xiaomo.travelhelper.pojo.User">
    UPDATE th_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType = VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="img != null">
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="true">
        update_time = now(),
      </if>
    </set>
    WHERE id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByAccountSelective" parameterType="com.xiaomo.travelhelper.pojo.User">
    UPDATE th_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType = VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="img != null">
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="true">
        update_time = now(),
      </if>
    </set>
    WHERE account = #{account,jdbcType=INTEGER}
  </update>

  <select id="findById" parameterType="integer" resultMap="BaseResultMap">
    SELECT * FROM th_user WHERE id = #{id,jdbcType=INTEGER}
  </select>

  <select id="findByAccount" parameterType="string" resultMap="BaseResultMap">
    SELECT * FROM  th_user WHERE account = #{account,jdbcType=VARCHAR}
  </select>

  <select id="checkImg" parameterType="string" resultType="int">
    SELECT count(img)
    FROM th_user
    WHERE img=#{img,jdbcType=VARCHAR}
  </select>

  <select id="checkEmail" parameterType="string" resultType="int">
    SELECT count(email)
    FROM th_user
    WHERE email=#{email,jdbcType=VARCHAR}
  </select>

  <select id="checkAccount" parameterType="string" resultType="int">
    SELECT count(account)
    FROM th_user
    WHERE account=#{account,jdbcType=VARCHAR}
  </select>

  <select id="checkLogin" resultMap="BaseResultMap" parameterType="map">
    SELECT * FROM th_user
    WHERE account=#{account,jdbcType=VARCHAR} and password=#{password,jdbcType=VARCHAR}
  </select>

  <select id="countOfUser" resultType="int">
    SELECT count(*) FROM  th_user
  </select>

  <select id="listUserDataGroupByMonth" resultType="map">
    SELECT count(*) AS countNum ,MONTH(create_time) AS createMonth FROM  th_user GROUP BY MONTH(create_time) ORDER BY create_time
  </select>

  <select id="getUsernameByAccount" resultType="string" parameterType="string">
    SELECT username FROM th_user WHERE account = #{account,jdbcType=VARCHAR}
  </select>

  <select id="getImgByAccount" resultType="string" parameterType="string">
    SELECT img FROM th_user WHERE account = #{account,jdbcType=VARCHAR}
  </select>

</mapper>